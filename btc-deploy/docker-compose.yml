services:
  bitcoind:
    container_name: bitcoind
    image: lncm/bitcoind:v26.0
    command: ["-txindex", "-debug=mempool", "-rpcport=18443"]
    ports:
      - "18443:18443"
      - "18444:18444"
      - "28332:28332"
      - "28333:28333"
    volumes:
      - ./bitcoin-data:/data/.bitcoin
      - ./bitcoin.conf:/data/.bitcoin/bitcoin.conf
    healthcheck:
      test: ["CMD-SHELL", "nc -z 127.0.0.1 18443"]
      interval: 30s
      timeout: 10s
      retries: 5

  ordinals-api:
    container_name: ordinals-api
    build:
      dockerfile: ordinals-api.dockerfile
      context: .
    depends_on:
      bitcoind:
        condition: service_healthy
      postgres:
        condition: service_started
    ports:
      - "8004:3000"
      - "8005:8005"
      - "3099:3099"

  ordhook:
    container_name: ordhook
    build:
      context: .
      dockerfile: ordhook.dockerfile
    ports:
      - "20456:20456"
    volumes:
      - ./Ordhook.toml:/Ordhook.toml
    depends_on:
      ordinals-api:
        condition: service_started

  ordinals-explorer:
    build:
      context: .
      dockerfile: ordinals-explorer.dockerfile
    env_file:
      - ./ordinals-explorer.env
    ports:
      - "8006:3001"
    volumes:
      - ./ordinals-explorer.env:/usr/src/ordinals-explorer/.env.production
    depends_on:
      ordinals-api:
        condition: service_started

  ord:
    container_name: ord
    build:
      dockerfile: ord.dockerfile
      context: .
    depends_on:
      bitcoind:
        condition: service_healthy
    ports:
      - "8000:8000"
      - "8001:8001"

  postgres:
    container_name: postgres
    image: "postgres:15"
    ports:
      - "5432:5432"
    volumes:
      - type: bind
        source: ./db-data
        target: /var/lib/postgresql/data
    user: "1000:1000"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_PORT: 5432

  evm-rpc-canister-proxy:
    container_name: evm-rpc-canister-proxy
    build:
      dockerfile: evm-rpc-canister-proxy.dockerfile
      context: .
    ports:
      - "8002:8002"
    extra_hosts:
      - "host.docker.internal:host-gateway"
